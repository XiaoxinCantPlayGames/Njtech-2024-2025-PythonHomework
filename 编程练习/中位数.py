# 中位数是常见的统计量之一，在概率论和统计学中有广泛的应用，在偏态分布中有重要的价值。例如，想从一组数据中知道人们的平均财富，假设 100 人一个月每人收入 100元， 10 人一个月每人收入 1 000 000 元。如果算平均值，得到的是 91 000 元，这是一个完全没有向人们展示真实情况的奇怪的值。在这种情况下，中位数会提供更有用的值和较好的描述。对于元素个数不同的列表而言，中位数的计算方式分为如下两种：
# （ 1）若列表中元素的个数为奇数，则中位数为排序后列表中间位置的那个数。
# （ 2）若列表中元素的个数为偶数，则中位数为排序后列表中间位置两个数的平均值。
# 请编写一个函数，该函数接收一个列表参数，返回该列表的中位数，最后在主程序中测试该函数。
# 输入格式：一行列表格式的数值序列。
# 输出格式：一个值，表示列表的中位数。
# 输入输出样例1：
# 输入：
# [4,2,7,5,6,1,3]
# 输出：
# 4
# 输入输出样例2：
# 输入：
# [4,2,7,5,6,1,8,3]
# 输出：
# 4.5


# 条件分支
ls = eval(input())
ls.sort()
if len(ls) % 2 == 0: # 判断这个列表的元素个数是奇数还是偶数
    print((ls[len(ls)//2]+ls[len(ls)//2-1])/2) # 地板除是结果向下取整，ls[len(ls)//2]是中间后面的那个元素，ls[len(ls)//2-1]才是中间前面的那个元素，不信你自己试试 §(*￣▽￣*)§
else:
    print(ls[len(ls)//2])

# 函数
ls = eval(input())
def zws(ls):
    ls.sort()
    if len(ls) % 2 == 0: # 判断这个列表的元素个数是奇数还是偶数
        return (ls[len(ls)//2]+ls[len(ls)//2-1])/2 # 地板除是结果向下取整，ls[len(ls)//2]是中间后面的那个元素，ls[len(ls)//2-1]才是中间前面的那个元素，不信你自己试试 §(*￣▽￣*)§
    else:
        return ls[len(ls)//2]

